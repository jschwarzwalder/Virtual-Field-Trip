v0.2 (12/03/2014):
-  Added optional settings button that links to a Cardboard app for managing headset parameters.
-  Added optional alignment marker to help center the screen under the lenses.
-  Rearranged the contents of the Cardboard folder.
-  Added support for Image Effects and Deferred Rendering in stereo.
-  Added support for drawing OnGUI()-based UI in stereo.
-  Allow user head tracking + magnetic trigger to activate OnGUI UI elements.
-  Added support for directional lens flares in stereo.
-  Added CardboardHead.Gaze property to help with gaze tracking.
-  Fixed bug in IPD scaling code: did not include eye offset in stereo comfort calculation.

v0.3 (12/04/2014):
-  Removed AutoEnableVR because it relies on NFC and was not triggering
   reliably for all Cardboard/phone combinations.

v0.4 (12/10/2014):
-  Fixed bug in the alignment marker rendering.
-  Fixed bug converting mouse click to magnet trigger when playing in the editor.

v0.4.1 (12/18/2014):
-  The CardboardGUI script automatically disables itself in Unity Free.

v0.4.5 (2/26/2015):
-  Added Cardboard.SDK.nativeDistortionCorrection to toggle built-in distortion correction on/off.
-  Added Cardboard.SDK.Recenter() to reset the head tracker to the current direction.
-  Added Cardboard.SDK.CreateScreen(x,y) to init the stereo rendertexture at given resolution.
-  Added Cardboard.SDK.BackButtonExitsApp to control how the back button is handled.
-  Added CardboardEye.toggleCullingMask to turn on or off specific layers in each eye.
-  Added StereoController.matchByZoom to match the mono FOV by zooming rather than translating.
-  Added SkyboxMesh.layer to set the layer of the generated skybox mesh.
-  The x86 architecture is now supported.
-  The message ‘Unable to find Unity Activity’ has been fixed.
-  The aspect ratio is determined by the device configuration, regardless of screen size.
-  The UI layer (alignment marker and settings button) work in Unity Free.

v0.4.9 (3/27/2015):
-  Added Cardboard.SDK.AutoDriftCorrection to turn gyro drift correction on/off (default on).
-  Added GazeInputModule for using gaze and magnet to interact with uGUI elements.
-  Added Cardboard.SDK.NeckModelScale to control the scale of the built-in neck model.
-  Added CardboardHead.trackRotation/trackPosition to control specific types of head tracking.
-  The entire screen is correctly cleared in VR mode.
-  Unity 5 import errors and warnings have been fixed; it will still ask to upgrade (say Yes).
-  The alignment marker is also drawn in the editor.
-  Distortion correction is applied in the editor.
-  Deprecated CardboardGUI scripts: not needed in Unity 5, moved to Legacy folder.
-  Deprecated SkyboxMesh and StereoLensFlare scripts: ditto.
-  Demo scene now uses uGUI instead of OnGUI.
-  Original demo scene using CardboardGUI moved to Legacy folder.

v0.4.10 (4/16/2015):
-  StereoController now caches the Eyes array.  Call InvalidateEyes() to reset the cache.
-  Moved coroutine management in Cardboard and StereoController to OnEnable()/OnDisable().
-  Fixed CardboardGUI's Head property in the Legacy demo scene.
-  Fixed the neck model Z offset in the Editor.
-  Fixed a bug in CardboardEditor which failed to save the Editor-only settings.

v0.5 (5/28/2015):
-  The iOS build platform is now supported.
-  Added a new C++ native code implementation for head tracking and distortion correction.
-  The Java-based native code implementation has been moved to the Legacy folder.
-  Refactored Cardboard.cs into a front-end Unity API and a back-end VRDevice class.
-  VRDevice implementations provided for Android, iOS, and Unity editor.
-  Some Cardboard properties have been renamed (but the old names still work).
-  Added a Tilt event for when the viewer is turned on its side.
-  Added C# events to Cardboard for responding to Trigger and Tilt events.
-  Added more phone and viewer profiles to the in-editor simulation menus.
-  If native code distortion correction is not supported, fall back to using an Image Effect.
-  If native code UI layer is not supported, fall back to rendering it in Unity.

v0.5.1 (7/22/2015):
-  Screen timeout disabled in iOS apps.
-  Reset VR Mode state on level load in case new scene does not have Cardboard.
-  Return correct Input.touchCount.
-  Crashing bug on certain models due to native code called PlatformInfo fixed.
-  GazeInputModule can be used with the mouse as well as with the Cardboard trigger.
-  Removed Simulate Distortion Correction flag in the Editor.
-  No longer force screen brightness to max on Android.
-  Removed the INTERNET permission from AndroidManifest.xml.
-  Split the demos into a separate unitypackage.
-  Ignore gyro drift setting on iOS (it doesn't need it).

v0.5.2 (10/12/2015):
-  General performance improvements and CPU load reduction to reduce thermal throttling.
-  New gyro drift correction method for better stability across more phones.
-  Onboarding and Setup dialogs now support localized language strings.  For Android this
   is automatic.  For iOS, enable Localizations in the Xcode project.
-  Default distortion correction method is now done entirely in Unity to avoid
   GL.IssuePluginEvent() overhead.  The old native C++ version still available if issues arise.
-  The GL.IssuePluginEvent() call uses a unique ID in order to be compatible with other native
   plugins.  (This only matters if you use the old Native distortion method.)
-  A new CardboardCamera prefab manages both full screen clear and distortion
   correction.  It is included in CardboardMain, or created automatically if needed.
-  Distortion correction is now done during the Camera rendering phase, which means
   that uGUI Screen Space Overlays (and OnGUI) will appear onscreen now.
-  The new distortion correction method is compatible with Metal (iOS) and multi-
   threaded rendering (Android).
-  The offscreen rendertexture used for distortion correction takes properties from
   project settings (e.g. antialiasing, pixel format).  Depth now defaults to 24 bits.
-  The offscreen rendertexture resolution is padded to account for the barrel distortion,
   in order to reduce relative fuzziness in pixels near the center.
-  The Cardboard object has a simple slider to adjust the scale of the rendertexture
   resolution globally.  Dial down to increase performance.
-  There is now an onscreen Back Button that functions like the normal Android back
   button (which is hidden in immersive mode).  You can turn it on or off, and choose
   how to respond.
-  Recent versions of Unity (5.1.x and 5.2.x) have changed the way they report DPI, which
   is affecting the SDKs calculation of screen size.  This has been worked around.
-  A bug in the StereoController.AddStereoRig() function which cached the eyes array before
   filling it in has been fixed.

v0.6 (1/12/2016):
-  Added support for spatialized audio playback, including scripts, prefabs, and editors.
-  Added a Cardboard entry to the editor's main menu, making it easier to reach documentation.
-  Added new CardoardManager prefab which packages everything except a Main Camera.  Useful when
   adapting your own cameras for stereo.
-  Added a simple reticle interface for gaze-based UI interaction.
-  Updated GazeInputModule to use the reticle interface.
-  Removed the "auto-instantiation" behavior of Cardboard.SDK, which sometimes created an extra Cardboard.
   You must ensure that a Cardboard object exists in the scene before Cardboard.SDK is used.
   The various prefabs like CardboardMain and CardboardManager are intended to help with this.
   Or call Cardboard.Create() from code.
-  Fixed the "UI layer flash" that happens on startup when the UI layer should not appear.
-  Removed the obsolete RadialUndistortionEffect shader and script.
-  Ensure that if the Main Camera uses a Skybox component, then the stereo cameras do too.
-  Added an event to CardboardHead for scripts that want to act after the head tracking is updated.
-  Revert a change from last release that padded the offscreen rendertexture to account for
   barrel distortion.  On higher resolution phones, the performance hit was too great.
-  Revert a change from last release that used the raw gyro on iOS together with the Cardboard
   gyro filtering.  The result was noticeably worse than just using the clean iOS gyro.
-  Removed the automatically triggered onboarding dialog.  It can still be triggered from code.
-  Fixed a bug causing apps that start with VR mode turned off to not render correctly when VR
   mode is later turned on.
-  Disabled the Tilt event callback, which due to threading-related issues was causing apps to crash
   if the phone had been tilted 90 degrees to the right before exiting or loading a new scene.
   Apps needing tilt detection should use Input.accel rather than Cardboard.Tilted.
-  Fixed a link-time issue on iOS caused when using the -ObjC linker flag.
-  Set the target SDK to 22 in AndroidManifest.xml to get around permission issues on Marshmallow.
-  DEPRECATION NOTICE: The next SDK release will drop Unity 4 compatibility and remove the Legacy folder.
